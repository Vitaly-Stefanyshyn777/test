"use client";

import React from "react";
import { Marker, Popup, useMap } from "react-leaflet";
import { Icon } from "leaflet";
import s from "./UserLocationMarker.module.css";

type Props = {
  onLocationFound?: (lat: number, lng: number) => void;
  onLocationError?: (error: string) => void;
  refreshTrigger?: number; // –ó–æ–≤–Ω—ñ—à–Ω—ñ–π —Ç—Ä–∏–≥–µ—Ä –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–∫–∞—Ü—ñ—ó
  shouldCenter?: boolean; // –ß–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ü–µ–Ω—Ç—Ä—É–≤–∞—Ç–∏ –∫–∞—Ä—Ç—É –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó
  userLocation?: { lat: number; lng: number } | null; // –ó–æ–≤–Ω—ñ—à–Ω—è –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—è
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Ü–µ–Ω—Ç—Ä–æ–º –∫–∞—Ä—Ç–∏
function MapController({
  userLocation,
  shouldCenter,
}: {
  userLocation: { lat: number; lng: number } | null;
  shouldCenter: boolean;
}) {
  const map = useMap();
  const [hasCentered, setHasCentered] = React.useState(false);

  React.useEffect(() => {
    if (userLocation && shouldCenter && !hasCentered) {
      // –î–æ–¥–∞—î–º–æ –Ω–µ–≤–µ–ª–∏–∫—É –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ
      const timer = setTimeout(() => {
        map.setView([userLocation.lat, userLocation.lng], 15, {
          animate: true,
          duration: 1.0, // –ó–º–µ–Ω—à—É—î–º–æ –¥–æ 1 —Å–µ–∫—É–Ω–¥–∏
        });
        setHasCentered(true);
      }, 100);

      return () => clearTimeout(timer);
    }
  }, [map, userLocation, shouldCenter, hasCentered]);

  // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –ø—Ä–∏ –∑–º—ñ–Ω—ñ –ª–æ–∫–∞—Ü—ñ—ó
  React.useEffect(() => {
    setHasCentered(false);
  }, [userLocation]);

  return null;
}

export default function UserLocationMarker({
  onLocationFound,
  onLocationError,
  refreshTrigger,
  shouldCenter = false,
  userLocation: externalUserLocation,
}: Props) {
  console.log("üîç UserLocationMarker: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è");
  const [userLocation, setUserLocation] = React.useState<{
    lat: number;
    lng: number;
  } | null>(null);
  const [isLoading, setIsLoading] = React.useState(false);
  const [error, setError] = React.useState<string | null>(null);

  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ CircleMarker –∑–∞–º—ñ—Å—Ç—å —ñ–∫–æ–Ω–∫–∏

  // –û—Ç—Ä–∏–º—É—î–º–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  const getUserLocation = React.useCallback(() => {
    console.log("üöÄ UserLocationMarker: –ó–∞–ø–∏—Ç—É—î–º–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é");
    if (!navigator.geolocation) {
      const errorMsg = "–ì–µ–æ–ª–æ–∫–∞—Ü—ñ—è –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è —Ü–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º";
      console.log("‚ùå UserLocationMarker:", errorMsg);
      setError(errorMsg);
      onLocationError?.(errorMsg);
      return;
    }

    console.log("üìç UserLocationMarker: –ó–∞–ø–∏—Ç—É—î–º–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é —É –±—Ä–∞—É–∑–µ—Ä–∞");
    setIsLoading(true);
    setError(null);

    navigator.geolocation.getCurrentPosition(
      (position) => {
        const { latitude, longitude } = position.coords;
        const location = { lat: latitude, lng: longitude };

        console.log("üéØ UserLocationMarker: –û—Ç—Ä–∏–º–∞–Ω–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é:", location);
        setUserLocation(location);
        setIsLoading(false);
        onLocationFound?.(latitude, longitude);
      },
      (error) => {
        let errorMessage = "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é";

        switch (error.code) {
          case error.PERMISSION_DENIED:
            errorMessage = "–î–æ—Å—Ç—É–ø –¥–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ";
            break;
          case error.POSITION_UNAVAILABLE:
            errorMessage = "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞";
            break;
          case error.TIMEOUT:
            errorMessage = "–ß–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó –≤–∏—á–µ—Ä–ø–∞–Ω–æ";
            break;
        }

        setError(errorMessage);
        setIsLoading(false);
        onLocationError?.(errorMessage);
      },
      {
        enableHighAccuracy: true,
        timeout: 10000,
        maximumAge: 300000, // 5 —Ö–≤–∏–ª–∏–Ω
      }
    );
  }, [onLocationFound, onLocationError]);

  // –ù–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–ø–∏—Ç—É—î–º–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é - —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –∑–æ–≤–Ω—ñ—à–Ω—å–æ–º—É —Ç—Ä–∏–≥–µ—Ä—ñ

  // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞—Ü—ñ—é –ø—Ä–∏ –∑–º—ñ–Ω—ñ refreshTrigger
  React.useEffect(() => {
    console.log(
      "üîÑ UserLocationMarker: useEffect refreshTrigger:",
      refreshTrigger
    );
    if (refreshTrigger !== undefined && refreshTrigger > 0) {
      console.log(
        "‚è∞ UserLocationMarker: –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–∞–π–º–µ—Ä –¥–ª—è –∑–∞–ø–∏—Ç—É –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó"
      );
      // –î–æ–¥–∞—î–º–æ –Ω–µ–≤–µ–ª–∏–∫—É –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ
      const timer = setTimeout(() => {
        console.log(
          "‚è∞ UserLocationMarker: –¢–∞–π–º–µ—Ä —Å–ø—Ä–∞—Ü—é–≤–∞–≤, –∑–∞–ø–∏—Ç—É—î–º–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é"
        );
        getUserLocation();
      }, 200);

      return () => clearTimeout(timer);
    }
  }, [refreshTrigger, getUserLocation]);

  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–æ–≤–Ω—ñ—à–Ω—é userLocation —è–∫—â–æ –≤–æ–Ω–∞ —î
  const currentUserLocation = externalUserLocation || userLocation;

  // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–∞—Å—Ç–æ–º–Ω—É —ñ–∫–æ–Ω–∫—É –¥–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  const userLocationIcon = React.useMemo(() => {
    console.log(
      "üé® UserLocationMarker: –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–∫–æ–Ω–∫—É –∑ Frame-1321317309.svg"
    );

    const icon = new Icon({
      iconUrl: "/Frame-1321317309.svg",
      iconSize: [40, 40], // –†–æ–∑–º—ñ—Ä —ñ–∫–æ–Ω–∫–∏
      iconAnchor: [20, 40], // –¢–æ—á–∫–∞ —è–∫–æ—Ä—è –≤–Ω–∏–∑—É —ñ–∫–æ–Ω–∫–∏
      popupAnchor: [0, -40], // –ó–º—ñ—â–µ–Ω–Ω—è –ø–æ–ø–∞–ø—É
    });

    console.log("üé® UserLocationMarker: Icon —Å—Ç–≤–æ—Ä–µ–Ω–∞:", icon);
    return icon;
  }, []);

  // –î–æ–¥–∞—î–º–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å—Ç–∞–Ω—É
  console.log("üîç UserLocationMarker: –°—Ç–∞–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:", {
    userLocation: currentUserLocation,
    externalUserLocation,
    internalUserLocation: userLocation,
    isLoading,
    error,
    refreshTrigger,
    shouldCenter,
  });

  // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
  console.log("üìç UserLocationMarker: –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –¥–ª—è –º–∞—Ä–∫–µ—Ä–∞:", {
    lat: currentUserLocation?.lat,
    lng: currentUserLocation?.lng,
    isValid:
      currentUserLocation &&
      typeof currentUserLocation.lat === "number" &&
      typeof currentUserLocation.lng === "number" &&
      !isNaN(currentUserLocation.lat) &&
      !isNaN(currentUserLocation.lng),
  });

  return (
    <>
      {/* –ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä –∫–∞—Ä—Ç–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */}
      <MapController
        userLocation={currentUserLocation}
        shouldCenter={shouldCenter}
      />

      {/* –ü–æ–∫–∞–∑—É—î–º–æ –º–∞—Ä–∫–µ—Ä —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î –ª–æ–∫–∞—Ü—ñ—è */}
      {currentUserLocation ? (
        <>
          {console.log(
            "üìç UserLocationMarker: –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –º–∞—Ä–∫–µ—Ä –Ω–∞",
            currentUserLocation
          )}
          {console.log(
            "üìç UserLocationMarker: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ–∫–æ–Ω–∫—É Frame-1321317309.svg"
          )}
          {/* Marker –∑ –∫–∞—Å—Ç–æ–º–Ω–æ—é —ñ–∫–æ–Ω–∫–æ—é –¥–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */}
          <Marker
            position={[currentUserLocation.lat, currentUserLocation.lng]}
            icon={userLocationIcon}
            key={`user-location-${currentUserLocation.lat}-${currentUserLocation.lng}`} // –î–æ–¥–∞—î–º–æ key –¥–ª—è –ø—Ä–∏–º—É—Å–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            eventHandlers={{
              add: () => {
                console.log(
                  "‚úÖ UserLocationMarker: Marker –∑ —ñ–∫–æ–Ω–∫–æ—é –¥–æ–¥–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç—É –∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏:",
                  currentUserLocation
                );
              },
              remove: () => {
                console.log(
                  "‚ùå UserLocationMarker: CircleMarker –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –∫–∞—Ä—Ç–∏"
                );
              },
            }}
          >
            <Popup>
              <div className={s.popupContainer}>
                <strong>–í–∞—à–µ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è</strong>
                <div className={s.coordinates}>
                  {currentUserLocation.lat.toFixed(6)},{" "}
                  {currentUserLocation.lng.toFixed(6)}
                </div>
                {isLoading && (
                  <div className={s.loading}>–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–∫–∞—Ü—ñ—ó...</div>
                )}
                {error && <div className={s.error}>{error}</div>}
              </div>
            </Popup>
          </Marker>
        </>
      ) : (
        console.log(
          "‚ùå UserLocationMarker: currentUserLocation —î null, –º–∞—Ä–∫–µ—Ä –Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è"
        )
      )}
    </>
  );
}
