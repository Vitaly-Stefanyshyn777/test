"use client";
import React, { useState } from "react";
import Image from "next/image";
import s from "./EventsSection.module.css";
import {
  User2Icon,
  StudentHatIcon,
  WeightIcon,
  WalkingIcon,
  RightArrowIcon,
  ArrowLeftIcon,
} from "@/components/Icons/Icons";

interface Event {
  id: string;
  date: string;
  time: string;
  title: string;
  description: string;
  image: string;
  location: string;
  venue: string;
  dateRange: string;
  results: {
    icon: string;
    text: string;
  }[];
}

const EventsSection: React.FC = () => {
  const [currentDate, setCurrentDate] = useState(new Date());

  const generateCalendar = (date: Date) => {
    const year = date.getFullYear();
    const month = date.getMonth();
    const today = new Date();
    const currentDay = today.getDate();
    const currentMonth = today.getMonth();
    const currentYear = today.getFullYear();

    const firstDay = new Date(year, month, 1);
    const lastDay = new Date(year, month + 1, 0);
    const startDay = firstDay.getDay();
    const daysInMonth = lastDay.getDate();

    const calendarDays = [];

    for (let day = 1; day <= daysInMonth; day++) {
      const isToday =
        day === currentDay && month === currentMonth && year === currentYear;

      calendarDays.push({
        day,
        isCurrentMonth: true,
        isToday,
        hasEvent: Math.random() > 0.7,
      });
    }

    const remainingDays = 35 - calendarDays.length;
    for (let day = 1; day <= remainingDays; day++) {
      calendarDays.push({
        day,
        isCurrentMonth: false,
        isToday: false,
        hasEvent: Math.random() > 0.7,
      });
    }

    return calendarDays;
  };

  const events: Event[] = [
    {
      id: "1",
      date: "26 —Ç—Ä–∞–≤–Ω—è",
      time: "12:30",
      title: "BFB Intensive Weekend",
      description: "",
      image: "/images/event1.jpg",
      location: "–ö–ò–á–í, –û–ë–û–õ–û–ù–¨",
      venue: "–°–¢–£–î–Ü–Ø MOVESPACE",
      dateRange: "11-12 –¢–†–ê–í–ù–Ø 2025",
      results: [
        { icon: "üë•", text: "–ù–æ–≤—ñ –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞" },
        { icon: "üéì", text: "–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–Ω–∞–Ω–Ω—è" },
        { icon: "‚öôÔ∏è", text: "–†–æ–±–æ—Ç–∞ –∑ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º" },
        { icon: "üèÑ", text: "–¢–µ—Ö–Ω—ñ–∫–∞ –Ω–∞ –±–æ—Ä–¥—ñ –∞–±–æ –ù–∞–≤–∏—á–∫–∏ –≤ —Ä—É—Å—ñ" },
      ],
    },
    {
      id: "2",
      date: "28 —Ç—Ä–∞–≤–Ω—è",
      time: "14:00",
      title: "BFB Advanced Training",
      description:
        "–ü—Ä–æ—Å—É–Ω—É—Ç–∏–π –∫—É—Ä—Å –¥–ª—è –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏—Ö —Ç—Ä–µ–Ω–µ—Ä—ñ–≤. –ü–æ–≥–ª–∏–±–ª–µ–Ω–µ –≤–∏–≤—á–µ–Ω–Ω—è –º–µ—Ç–æ–¥–∏–∫–∏ —Ç–∞ –Ω–æ–≤—ñ —Ç–µ—Ö–Ω—ñ–∫–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å. –†–æ–∑—à–∏—Ä–µ–Ω—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ —Ç–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ —Å–µ–∫—Ä–µ—Ç–∏.",
      image: "/images/event2.jpg",
      location: "–ö–ò–á–í, –û–ë–û–õ–û–ù–¨",
      venue: "–°–¢–£–î–Ü–Ø MOVESPACE",
      dateRange: "28 –¢–†–ê–í–ù–Ø 2025",
      results: [
        { icon: "üë•", text: "–ù–æ–≤—ñ –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞" },
        { icon: "üéì", text: "–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–Ω–∞–Ω–Ω—è" },
        { icon: "‚öôÔ∏è", text: "–†–æ–±–æ—Ç–∞ –∑ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º" },
        { icon: "üèÑ", text: "–¢–µ—Ö–Ω—ñ–∫–∞ –Ω–∞ –±–æ—Ä–¥—ñ" },
      ],
    },
    {
      id: "3",
      date: "30 —Ç—Ä–∞–≤–Ω—è",
      time: "10:00",
      title: "BFB Beginner Workshop",
      description:
        "–í—Å—Ç—É–ø–Ω–∏–π –≤–æ—Ä–∫—à–æ–ø –¥–ª—è –Ω–æ–≤–∞—á–∫—ñ–≤. –û–∑–Ω–∞–π–æ–º–ª–µ–Ω–Ω—è –∑ –±–∞–∑–æ–≤–∏–º–∏ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º–∏ —Ç–∞ –ø–µ—Ä—à–∏–º–∏ –∫—Ä–æ–∫–∞–º–∏ –≤ BFB. –Ü–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤.",
      image: "/images/event3.jpg",
      location: "–ö–ò–á–í, –û–ë–û–õ–û–ù–¨",
      venue: "–°–¢–£–î–Ü–Ø MOVESPACE",
      dateRange: "30 –¢–†–ê–í–ù–Ø 2025",
      results: [
        { icon: "üë•", text: "–ù–æ–≤—ñ –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞" },
        { icon: "üéì", text: "–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–Ω–∞–Ω–Ω—è" },
        { icon: "‚öôÔ∏è", text: "–†–æ–±–æ—Ç–∞ –∑ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º" },
        { icon: "üèÑ", text: "–¢–µ—Ö–Ω—ñ–∫–∞ –Ω–∞ –±–æ—Ä–¥—ñ" },
      ],
    },
    {
      id: "4",
      date: "2 —á–µ—Ä–≤–Ω—è",
      time: "16:30",
      title: "BFB Master Class",
      description:
        "–ú–∞–π—Å—Ç–µ—Ä-–∫–ª–∞—Å –≤—ñ–¥ –µ–∫—Å–ø–µ—Ä—Ç—ñ–≤. –†–æ–∑–∫—Ä–∏—Ç—Ç—è —Å–µ–∫—Ä–µ—Ç—ñ–≤ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ–≥–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —Ç–∞ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤. –ï–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ —Ç–µ—Ö–Ω—ñ–∫–∏.",
      image: "/images/event4.jpg",
      location: "–ö–ò–á–í, –û–ë–û–õ–û–ù–¨",
      venue: "–°–¢–£–î–Ü–Ø MOVESPACE",
      dateRange: "2 –ß–ï–†–í–ù–Ø 2025",
      results: [
        { icon: "üë•", text: "–ù–æ–≤—ñ –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞" },
        { icon: "üéì", text: "–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–Ω–∞–Ω–Ω—è" },
        { icon: "‚öôÔ∏è", text: "–†–æ–±–æ—Ç–∞ –∑ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º" },
        { icon: "üèÑ", text: "–¢–µ—Ö–Ω—ñ–∫–∞ –Ω–∞ –±–æ—Ä–¥—ñ" },
      ],
    },
    {
      id: "5",
      date: "5 —á–µ—Ä–≤–Ω—è",
      time: "18:00",
      title: "BFB Team Building",
      description:
        "–ö–æ–º–∞–Ω–¥–Ω–∏–π –≤–æ—Ä–∫—à–æ–ø –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤. –†–æ–∑–≤–∏—Ç–æ–∫ –∫–æ–º–∞–Ω–¥–∏ —á–µ—Ä–µ–∑ —Å–ø—ñ–ª—å–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —Ç–∞ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è —Ü—ñ–ª–µ–π. –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏.",
      image: "/images/event5.jpg",
      location: "–ö–ò–á–í, –û–ë–û–õ–û–ù–¨",
      venue: "–°–¢–£–î–Ü–Ø MOVESPACE",
      dateRange: "5 –ß–ï–†–í–ù–Ø 2025",
      results: [
        { icon: "üë•", text: "–ù–æ–≤—ñ –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞" },
        { icon: "üéì", text: "–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–Ω–∞–Ω–Ω—è" },
        { icon: "‚öôÔ∏è", text: "–†–æ–±–æ—Ç–∞ –∑ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º" },
        { icon: "üèÑ", text: "–¢–µ—Ö–Ω—ñ–∫–∞ –Ω–∞ –±–æ—Ä–¥—ñ" },
      ],
    },
  ];

  const [selectedEvent, setSelectedEvent] = useState<Event | null>(
    events[0] || null
  );

  const calendarDays = generateCalendar(currentDate);

  const weekDays = ["–ü–ù", "–í–¢", "–°–†", "–ß–¢", "–ü–¢", "–°–ë", "–ù–î"];

  const goToPreviousMonth = () => {
    setCurrentDate(
      new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1)
    );
  };

  const goToNextMonth = () => {
    setCurrentDate(
      new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1)
    );
  };

  return (
    <section className={s.section}>
      <div className={s.container}>
        <div className={s.header}>
          <div className={s.headerLine}></div>
          <div className={s.TitleTextBlock}>
            <p className={s.headerText}>–ö–∞–ª–µ–Ω–¥–∞—Ä –ø–æ–¥—ñ–π</p>
            <h2 className={s.title}>
              –ñ–∏–≤—ñ –ø–æ–¥—ñ—ó, —Ä–µ–∞–ª—å–Ω—ñ –ª—é–¥–∏, —Ñ—ñ—Ç–Ω–µ—Å, —è–∫–∏–π –Ω–∞–¥–∏—Ö–∞—î
            </h2>
          </div>
        </div>

        <div className={s.content}>
          <div className={s.leftColumn}>
            <div className={s.leftColumnWrapper}>
              <div className={s.calendarBlock}>
                <div className={s.calendar}>
                  <div className={s.calendarHeader}>
                    <h3 className={s.monthTitle}>
                      {currentDate.toLocaleDateString("uk-UA", {
                        month: "long",
                        year: "numeric",
                      })}
                    </h3>
                    <div className={s.monthNavigation}>
                      <button
                        className={s.navButton}
                        onClick={goToPreviousMonth}
                      >
                        <div className={s.navButtonIcon}>
                          <ArrowLeftIcon />
                        </div>
                      </button>
                      <button className={s.navButton} onClick={goToNextMonth}>
                        <div className={s.navButtonIcon}>
                          <RightArrowIcon />
                        </div>
                      </button>
                    </div>
                  </div>

                  <div className={s.calendarContent}>
                    <div className={s.weekDays}>
                      {weekDays.map((day) => (
                        <div key={day} className={s.weekDay}>
                          {day}
                        </div>
                      ))}
                    </div>

                    <div className={s.calendarGrid}>
                      {calendarDays.map((day, index) => (
                        <div
                          key={index}
                          className={`${s.calendarDay} ${
                            !day.isCurrentMonth ? s.otherMonth : ""
                          } ${day.isToday ? s.selected : ""} ${
                            day.hasEvent ? s.hasEvent : ""
                          }`}
                        >
                          {day.day}
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
              <h3 className={s.eventsTitle}>–ö–∞–ª–µ–Ω–¥–∞—Ä –ø–æ–¥—ñ–π</h3>
              <div className={s.eventsListBlock}>
                <div className={s.eventsList}>
                  {events.map((event, index) => (
                    <div
                      key={event.id}
                      className={`${s.eventItem} ${
                        selectedEvent?.id === event.id ? s.activeEvent : ""
                      }`}
                      onClick={() => setSelectedEvent(event)}
                    >
                      <div className={s.eventDate}>
                        <span className={s.eventDay}>{event.date}</span>
                        <span className={s.eventTime}>{event.time}</span>
                      </div>
                      <div className={s.eventDivider}></div>
                      <div className={s.eventInfo}>
                        <h4 className={s.eventTitle}>{event.title}</h4>
                        {event.description && (
                          <p className={s.eventDescription}>
                            {event.description}
                          </p>
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>

          <div className={s.rightColumn}>
            <div className={s.eventCardBlock}>
              <div className={s.eventCard}>
                <div className={s.eventCardImage}>
                  <Image
                    src="/images/image2.png"
                    alt="BFB Intensive Weekend"
                    fill
                    className={s.cardImage}
                  />
                </div>
                <div className={s.eventCardImageWrap}>
                  <div className={s.eventCardContent}>
                    <div className={s.eventCardMeta}>
                      <div className={s.cardMetaItem}>
                        <p className={s.cardMetaItemText}>11-12 –¢–†–ê–í–ù–Ø 2025</p>
                      </div>
                      <div className={s.cardMetaItem}>
                        <p className={s.cardMetaItemText}>–ö–ò–á–í, –û–ë–û–õ–û–ù–¨</p>
                      </div>
                      <div className={s.cardMetaItem}>
                        <p className={s.cardMetaItemText}>–°–¢–£–î–Ü–Ø MOVESPACE</p>
                      </div>
                    </div>

                    <div className={s.eventCardInfo}>
                      <h3 className={s.eventCardTitle}>
                        BFB Intensive Weekend
                      </h3>
                      <p className={s.eventCardDescription}>
                        –ñ–∏–≤–∏–π –≤–æ—Ä–∫—à–æ–ø –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ —ñ —Ç–∏—Ö, —Ö—Ç–æ —Ö–æ—á–µ –±–ª–∏–∂—á–µ
                        –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å —ñ–∑ –º–µ—Ç–æ–¥–∏–∫–æ—é. 2 –¥–Ω—ñ –ø—Ä–∞–∫—Ç–∏–∫–∏, —Ç–µ—Ö–Ω—ñ–∫–∞
                        –±–æ—Ä–¥—É, —Ä–µ–∞–ª—å–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∑ –õ—ñ–∫–æ—é –§—ñ—Ç–¥–µ–Ω—Å,
                        –∫–æ–º&apos;—é–Ω—ñ—Ç—ñ —ñ 100% –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è. –Ü–¥–µ–∞–ª—å–Ω–æ —è–∫
                        –ø–µ—Ä—à–µ –∑–∞–Ω—É—Ä–µ–Ω–Ω—è –≤ BFB.
                      </p>
                    </div>

                    <div className={s.eventCardResults}>
                      <h4 className={s.resultsTitle}>–†–µ–∑—É–ª—å—Ç–∞—Ç:</h4>
                      <div className={s.resultsGrid}>
                        <div className={s.resultItem}>
                          <span className={s.resultIcon}>
                            <User2Icon />
                          </span>
                          <span className={s.resultText}>–ù–æ–≤—ñ –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞</span>
                        </div>
                        <div className={s.resultItem}>
                          <span className={s.resultIcon}>
                            <StudentHatIcon />
                          </span>
                          <span className={s.resultText}>–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–Ω–∞–Ω–Ω—è</span>
                        </div>
                        <div className={s.resultItem}>
                          <span className={s.resultIcon}>
                            <WeightIcon />
                          </span>
                          <span className={s.resultText}>
                            –†–æ–±–æ—Ç–∞ –∑ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º
                          </span>
                        </div>
                        <div className={s.resultItem}>
                          <span className={s.resultIcon}>
                            <WalkingIcon />
                          </span>
                          <span className={s.resultText}>
                            –¢–µ—Ö–Ω—ñ–∫–∞ –Ω–∞ –±–æ—Ä–¥—ñ –∞–±–æ –ù–∞–≤–∏—á–∫–∏ –≤ —Ä—É—Å—ñ
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>

                  <button className={s.eventCardButton}>–ó–∞–ø–∏—Å–∞—Ç–∏—Å—å</button>
                </div>
                {/*  */}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default EventsSection;
