"use client";
import React, { useMemo, useState } from "react";
import Image from "next/image";
import {
  Check3Icon,
  GiftIcon,
  FavoriteHeader,
  CheckMarkIcon,
  Smitnik2Icon,
} from "@/components/Icons/Icons";
import { useFavoriteStore } from "@/store/favorites";
import { useAuthStore } from "@/store/auth";
import TrenersModal from "@/components/auth/TrenersModal/TrenersModal";
import RegisterModal from "@/components/auth/RegisterModal/RegisterModal";
// import { useStickySidebar } from "@/hooks/useStickySidebar";
import styles from "./CourseSidebar.module.css";
import {
  useWcProductsQuery,
  useCourseQuery,
} from "@/components/hooks/useWpQueries";
import { useCourseQuery as useCourseDataQuery } from "@/lib/coursesQueries";
import { useCartStore } from "@/store/cart";

interface CourseSidebarProps {
  courseId?: number;
}

const CourseSidebar: React.FC<CourseSidebarProps> = ({ courseId = 169 }) => {
  const [favorite, setFavorite] = useState(false);
  const [isTrenersModalOpen, setIsTrenersModalOpen] = useState(false);
  const [isRegisterModalOpen, setIsRegisterModalOpen] = useState(false);
  const toggleFav = useFavoriteStore((s) => s.toggleFavorite);
  const isLoggedIn = useAuthStore((s) => s.isLoggedIn);
  const isControlsDisabled = !isLoggedIn;
  // const { isSticky, shouldStick } = useStickySidebar();

  const toggleFavorite = (e: React.MouseEvent) => {
    e.preventDefault();
    e.stopPropagation();
    setFavorite(!favorite);
    toggleFav({
      id: "course-bfb",
      name: "–û—Å–Ω–æ–≤–∏ —Ç—Ä–µ–Ω–µ—Ä—Å—Ç–≤–∞ BFB",
      price: 0,
      image: "/images/course-hero.jpg",
    });
  };

  const handleAddToCart = () => {
    if (course && courseId) {
      const courseName = course.title.rendered.replace(/____FULL____/g, "");
      const coursePrice =
        parseFloat(hasDiscount ? salePrice : currentPrice) / 100;
      const courseImageUrl =
        courseImage || product?.images?.[0]?.src || "/images/course-hero.jpg";

      addItem(
        {
          id: courseId.toString(),
          name: courseName,
          price: coursePrice,
          image: courseImageUrl,
        },
        1
      );
    }
  };

  // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫—É—Ä—Å—É –¥–ª—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É
  const { data: course } = useCourseQuery(courseId);

  // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫—É—Ä—Å—É –∑ coursesQueries (—è–∫ –≤ CourseCard)
  const { data: courseData } = useCourseDataQuery(courseId || 169);

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥–µ–±–∞–≥—É
  React.useEffect(() => {
    console.log("[CourseSidebar] üéì Course data:", course);
    console.log("[CourseSidebar] üè∑Ô∏è Course title:", course?.title?.rendered);
  }, [course]);

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É "–ù–æ–≤–∏–Ω–∫–∞" (30 –¥–Ω—ñ–≤)
  const isNewProduct = (dateCreated?: string) => {
    if (!dateCreated) return false;
    const createdDate = new Date(dateCreated);
    const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);
    return createdDate > thirtyDaysAgo;
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É "–•—ñ—Ç" –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–æ–ø 10 –ø—Ä–æ–¥–∞–∂—ñ–≤
  const isHitProduct = (storeProduct?: {
    average_rating?: string;
    rating_count?: number;
    total_sales?: number;
    featured?: boolean;
    on_sale?: boolean;
  }) => {
    if (!storeProduct) return false;

    const totalSales = parseInt(storeProduct.total_sales?.toString() || "0");

    // –Ø–∫—â–æ –Ω–µ–º–∞—î –ø—Ä–æ–¥–∞–∂—ñ–≤, –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ —Ö—ñ—Ç
    if (totalSales === 0) return false;

    // –î–ª—è CourseSidebar –ø–æ–∫–∏ —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–æ—Å—Ç—É –ª–æ–≥—ñ–∫—É
    // –í –º–∞–π–±—É—Ç–Ω—å–æ–º—É –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
    return totalSales > 0; // –ü–æ–∫–∏ —â–æ –ø–æ–∫–∞–∑—É—î–º–æ —Ö—ñ—Ç –¥–ª—è –±—É–¥—å-—è–∫–∏—Ö –ø—Ä–æ–¥–∞–∂—ñ–≤
  };

  // Cart store
  const addItem = useCartStore((s) => s.addItem);
  const cartItems = useCartStore((s) => s.items);
  const isInCart =
    cartItems[courseId?.toString() || ""] &&
    cartItems[courseId?.toString() || ""].quantity > 0;

  // –û—Ç—Ä–∏–º—É—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫—É—Ä—Å—É
  const [courseImage, setCourseImage] = React.useState<string | null>(null);

  React.useEffect(() => {
    if (course?.featured_media) {
      fetch(
        `https://www.api.bfb.projection-learn.website/wp-json/wp/v2/media/${course.featured_media}`
      )
        .then((res) => res.json())
        .then((data) => setCourseImage(data.source_url))
        .catch(() => setCourseImage(null));
    }
  }, [course?.featured_media]);

  // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ WooCommerce –ø—Ä–æ–¥—É–∫—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫—É—Ä—Å—É
  const { data: products = [] } = useWcProductsQuery({
    include: courseId ? courseId.toString() : "",
    per_page: 1,
  });
  const product = useMemo(() => {
    console.log("[CourseSidebar] üîç Products from WooCommerce:", products);
    console.log("[CourseSidebar] üéØ Selected product:", products[0]);
    return products[0];
  }, [products]);

  // –û—Ç—Ä–∏–º—É—î–º–æ WooCommerce v3 API –¥–∞–Ω—ñ –¥–ª—è —Ü—ñ–Ω —Ç–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—ñ
  const [storeProduct, setStoreProduct] = useState<{
    prices?: {
      price: string;
      regular_price: string;
      sale_price: string;
    };
    on_sale?: boolean;
    average_rating?: string;
    rating_count?: number;
    total_sales?: number;
    featured?: boolean;
    is_purchasable?: boolean;
    purchasable?: boolean;
    stock_status?: string;
  } | null>(null);

  React.useEffect(() => {
    if (courseId) {
      fetch(
        `https://www.api.bfb.projection-learn.website/wp-json/wc/v3/products/${courseId}`,
        {
          headers: {
            Authorization:
              "Basic " +
              btoa(
                "ck_fbd08d0a763d79d93aff6c3a56306214710ebb71:cs_871e6f287926ed84839018c2d7578ef9a71865c4"
              ),
            "Content-Type": "application/json",
          },
        }
      )
        .then((res) => res.json())
        .then((data) => {
          console.log("[CourseSidebar] üõí WooCommerce API response:", data);
          setStoreProduct(data);
        })
        .catch((error) => {
          console.error("[CourseSidebar] ‚ùå WooCommerce API error:", error);
          setStoreProduct(null);
        });
    }
  }, [courseId]);

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ü—ñ–Ω–∏
  const formatPrice = (
    price: string | number | undefined,
    isWcPrice: boolean = false
  ): string => {
    if (!price || isNaN(parseFloat(price.toString()))) return "0";
    const priceValue = parseFloat(price.toString());
    if (isNaN(priceValue)) return "0";
    // WooCommerce —Ü—ñ–Ω–∏ –≤ –∫–æ–ø—ñ–π–∫–∞—Ö, fallback —Ü—ñ–Ω–∏ –≤ –≥—Ä–∏–≤–Ω—è—Ö
    return (isWcPrice ? priceValue / 100 : priceValue).toLocaleString("uk-UA");
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –∑–Ω–∏–∂–∫–∏
  const calculateDiscount = (salePrice: string, regularPrice: string) => {
    if (!salePrice || !regularPrice || salePrice === regularPrice) return 0;

    // WooCommerce —Ü—ñ–Ω–∏ –≤ –∫–æ–ø—ñ–π–∫–∞—Ö, —Ç–æ–º—É –¥—ñ–ª–∏–º–æ –Ω–∞ 100 –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤—ñ–¥—Å–æ—Ç–∫–∞
    const salePriceValue = parseFloat(salePrice) / 100;
    const regularPriceValue = parseFloat(regularPrice) / 100;

    return Math.round(
      ((regularPriceValue - salePriceValue) / regularPriceValue) * 100
    );
  };

  // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ü—ñ–Ω–∏ —Ç–∞ –∑–Ω–∏–∂–∫—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫—É—Ä—Å—É (—è–∫ –≤ CourseCard)
  const currentPrice =
    courseData?.wcProduct?.prices?.price ||
    courseData?.price ||
    storeProduct?.prices?.price ||
    product?.sale_price ||
    product?.price ||
    "5000";
  const regularPrice =
    courseData?.wcProduct?.prices?.regular_price ||
    courseData?.originalPrice ||
    storeProduct?.prices?.regular_price ||
    product?.regular_price;
  const salePrice =
    courseData?.wcProduct?.prices?.sale_price ||
    storeProduct?.prices?.sale_price;
  const isOnSale =
    courseData?.wcProduct?.on_sale || storeProduct?.on_sale || product?.on_sale;

  // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è fallback –ª–æ–≥—ñ–∫–∏ (—è–∫ –≤ CourseCard)
  const fallbackPrice = courseData?.price ? parseFloat(courseData.price) : 5000;
  const fallbackOriginalPrice = courseData?.originalPrice
    ? parseFloat(courseData.originalPrice)
    : 7000;

  // –§–æ—Ä–º–∞—Ç—É—î–º–æ —Ü—ñ–Ω–∏ (–≤—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —è–∫ —î, –±–µ–∑ –¥—ñ–ª–µ–Ω–Ω—è –Ω–∞ 100)
  const formattedCurrentPrice = formatPrice(currentPrice, false);
  const formattedRegularPrice = formatPrice(regularPrice, false);
  const formattedSalePrice = salePrice ? formatPrice(salePrice, false) : null;

  // –î–æ–¥–∞—Ç–∫–æ–≤–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥–µ–±–∞–≥—É —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
  console.log("[CourseSidebar] üîß –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è:", {
    currentPrice,
    formattedCurrentPrice,
    courseDataExists: !!courseData,
    storeProductExists: !!storeProduct,
    productExists: !!product,
  });

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –∑–Ω–∏–∂–∫–∞ (—è–∫ –≤ CourseCard)
  const hasDiscount =
    isOnSale && salePrice && regularPrice && salePrice !== regularPrice;

  // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–ª—è fallback —Ü—ñ–Ω (—è–∫ –≤ CourseCard)
  const hasFallbackDiscount =
    !hasDiscount &&
    fallbackOriginalPrice &&
    fallbackPrice &&
    fallbackOriginalPrice > fallbackPrice &&
    fallbackPrice > 0;

  // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –∑–Ω–∏–∂–∫—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∏—Ö —Ü—ñ–Ω (—è–∫ –≤ CourseCard)
  const finalDiscount = hasDiscount
    ? calculateDiscount(salePrice, regularPrice)
    : hasFallbackDiscount
    ? Math.round(
        ((fallbackOriginalPrice - fallbackPrice) / fallbackOriginalPrice) * 100
      )
    : 0;

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥–µ–±–∞–≥—É —Ü—ñ–Ω
  React.useEffect(() => {
    console.log("[CourseSidebar] üí∞ –¶—ñ–Ω–∏:", {
      courseId,
      courseData: courseData?.wcProduct,
      storeProduct: storeProduct?.prices,
      product: product?.price,
      currentPrice,
      regularPrice,
      salePrice,
      isOnSale,
      formattedCurrentPrice,
      formattedRegularPrice,
      formattedSalePrice,
      hasDiscount,
      hasFallbackDiscount,
      finalDiscount,
      fallbackPrice,
      fallbackOriginalPrice,
    });
  }, [
    courseId,
    courseData,
    storeProduct,
    product,
    currentPrice,
    regularPrice,
    salePrice,
    isOnSale,
    formattedCurrentPrice,
    formattedRegularPrice,
    formattedSalePrice,
    hasDiscount,
    hasFallbackDiscount,
    finalDiscount,
    fallbackPrice,
    fallbackOriginalPrice,
  ]);

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥–µ–±–∞–≥—É Course_include
  React.useEffect(() => {
    console.log("[CourseSidebar] üìã Course_include:", {
      courseId,
      course: course?.course_data,
      courseInclude: course?.course_data?.Course_include,
      courseIncludeLength: course?.course_data?.Course_include?.length,
      courseIncludeType: typeof course?.course_data?.Course_include,
      courseIncludeIsArray: Array.isArray(course?.course_data?.Course_include),
    });
  }, [courseId, course]);

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥–µ–±–∞–≥—É dateBlock –¥–∞–Ω–∏—Ö
  React.useEffect(() => {
    console.log("[CourseSidebar] üìÖ DateBlock –¥–∞–Ω—ñ:", {
      courseId,
      storeProduct: {
        purchasable: storeProduct?.purchasable,
        is_purchasable: storeProduct?.is_purchasable,
        average_rating: storeProduct?.average_rating,
        rating_count: storeProduct?.rating_count,
        stock_status: storeProduct?.stock_status,
      },
      product: {
        stock_status: product?.stock_status,
        average_rating: product?.average_rating,
        rating_count: product?.rating_count,
      },
      availability:
        storeProduct?.purchasable ||
        storeProduct?.is_purchasable ||
        product?.stock_status === "instock"
          ? "–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ"
          : "–ù–µ–º–∞—î",
      rating: parseFloat(
        storeProduct?.average_rating || product?.average_rating || "0"
      ),
      reviewsCount: storeProduct?.rating_count || product?.rating_count || 0,
    });
  }, [courseId, storeProduct, product]);

  return (
    <div className={styles.sidebar}>
      <div className={styles.imageContainer}>
        <Image
          src={
            courseImage ||
            product?.images?.[0]?.src ||
            "/images/course-hero.jpg"
          }
          alt={(
            product?.name ||
            course?.title?.rendered ||
            "–û—Å–Ω–æ–≤–∏ —Ç—Ä–µ–Ω–µ—Ä—Å—Ç–≤–∞ BFB"
          ).replace(/____FULL____/g, "")}
          width={400}
          height={300}
          className={styles.courseImage}
        />
        <div className={styles.badges}>
          {/* –ù–æ–≤–∏–Ω–∫–∞ - —è–∫—â–æ –∫—É—Ä—Å —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –º–µ–Ω—à–µ –Ω—ñ–∂ 30 –¥–Ω—ñ–≤ —Ç–æ–º—É */}
          {isNewProduct(course?.course_data?.Date_start || undefined) && (
            <span className={styles.newBadge}>–ù–æ–≤–∏–Ω–∫–∞</span>
          )}

          {/* –ó–Ω–∏–∂–∫–∞ - —è–∫—â–æ –∫—É—Ä—Å –Ω–∞ —Ä–æ–∑–ø—Ä–æ–¥–∞–∂—ñ */}
          {(hasDiscount || hasFallbackDiscount) && finalDiscount > 0 && (
            <span className={styles.discountBadge}>-{finalDiscount}%</span>
          )}

          {/* –•—ñ—Ç - —è–∫—â–æ –∫—É—Ä—Å –ø–æ–ø—É–ª—è—Ä–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ä–µ–π—Ç–∏–Ω–≥—É —Ç–∞ –≤—ñ–¥–≥—É–∫—ñ–≤ */}
          {storeProduct && isHitProduct(storeProduct) && (
            <span className={styles.hitBadge}>–•—ñ—Ç</span>
          )}
        </div>
      </div>

      <div className={styles.courseInfo}>
        <div className={styles.courseTitleBlock}>
          <div className={styles.categoryTagBlock}>
            <div className={styles.categoryTag}>–ö—É—Ä—Å–∏</div>
            <div className={styles.titleWithBadges}>
              <h2 className={styles.courseTitle}>
                {(
                  product?.name ||
                  course?.title?.rendered ||
                  "–û—Å–Ω–æ–≤–∏ —Ç—Ä–µ–Ω–µ—Ä—Å—Ç–≤–∞ BFB"
                ).replace(/____FULL____/g, "")}
              </h2>
              <div className={styles.courseBadges}>
                {storeProduct && isHitProduct(storeProduct) && (
                  <span className={`${styles.badge} ${styles.hitBadge}`}>
                    –•—ñ—Ç
                  </span>
                )}
              </div>
            </div>
            <p className={styles.courseDescription}>
              {course?.excerpt?.rendered?.replace(/<[^>]*>/g, "") ||
                "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –∫—É—Ä—Å –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä—ñ–≤ –∑ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –Ω–∞ BFB"}
            </p>
          </div>
        </div>

        <div className={styles.dateBlock}>
          <div className={styles.availability}>
            <CheckMarkIcon />
            <span className={styles.inStock}>
              {storeProduct?.purchasable ||
              storeProduct?.is_purchasable ||
              product?.stock_status === "instock"
                ? "–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ"
                : "–ù–µ–º–∞—î"}
            </span>
          </div>

          <div className={styles.rating}>
            <div className={styles.stars}>
              {Array.from({ length: 5 }, (_, i) => (
                <span
                  key={i}
                  className={`${styles.star} ${
                    i <
                    Math.floor(
                      parseFloat(
                        storeProduct?.average_rating ||
                          product?.average_rating ||
                          "0"
                      )
                    )
                      ? styles.starFilled
                      : ""
                  }`}
                >
                  ‚òÖ
                </span>
              ))}
            </div>
            <span className={styles.reviewsCount}>
              (–í—ñ–¥–≥—É–∫–∏{" "}
              {storeProduct?.rating_count || product?.rating_count || 0})
            </span>
          </div>
        </div>

        <div className={styles.courseIncludes}>
          <h3 className={styles.courseIncludesTitle}>–¶–ï–ô –ö–£–†–° –í–ö–õ–Æ–ß–ê–Ñ:</h3>
          <ul className={styles.courseIncludesList}>
            {course?.course_data.Course_include?.map((item, index) => (
              <li key={index} className={styles.courseIncludesItem}>
                <div className={styles.courseIncludesIcon}>
                  <Check3Icon />
                </div>
                <span className={styles.courseIncludesText}>{item}</span>
              </li>
            )) || (
              // Fallback —Å—Ç–∞—Ç–∏—á–Ω–∏–π —Å–ø–∏—Å–æ–∫
              <>
                <li className={styles.courseIncludesItem}>
                  <div className={styles.courseIncludesIcon}>
                    <Check3Icon />
                  </div>
                </li>
                <li className={styles.courseIncludesItem}>
                  <div className={styles.courseIncludesIcon}>
                    <Check3Icon />
                  </div>
                  {/* <span className={styles.courseIncludesText}>
                    8 —Ä–µ—Å—É—Ä—Å—ñ–≤ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                  </span> */}
                </li>
                <li className={styles.courseIncludesItem}>
                  <div className={styles.courseIncludesIcon}>
                    <Check3Icon />
                  </div>
                  <span className={styles.courseIncludesText}>
                    –î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –º–æ–±—ñ–ª—å–Ω—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó —Ç–∞ —Ç–µ–ª–µ–≤—ñ–∑–æ—Ä
                  </span>
                </li>
                <li className={styles.courseIncludesItem}>
                  <div className={styles.courseIncludesIcon}>
                    <Check3Icon />
                  </div>
                  <span className={styles.courseIncludesText}>
                    –ü–æ–≤–Ω–∏–π –¥–æ–≤—ñ—á–Ω–∏–π –¥–æ—Å—Ç—É–ø
                  </span>
                </li>
                <li className={styles.courseIncludesItem}>
                  <div className={styles.courseIncludesIcon}>
                    <Check3Icon />
                  </div>
                  <span className={styles.courseIncludesText}>
                    –°–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç –ø—Ä–æ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è
                  </span>
                </li>
              </>
            )}
          </ul>
        </div>

        <div className={styles.pricingCartBlock}>
          <div className={styles.pricing}>
            <span className={styles.currentPrice}>
              {formattedCurrentPrice} ‚Ç¥
            </span>
            {(hasDiscount || hasFallbackDiscount) && formattedRegularPrice && (
              <span className={styles.oldPrice}>{formattedRegularPrice} ‚Ç¥</span>
            )}
          </div>

          <div className={styles.subscriptionOffer}>
            <div className={styles.subscriptionOfferIcon}>
              <GiftIcon />
            </div>
            <p>
              –û—Ñ–æ—Ä–º—ñ—Ç—å –ø—ñ–¥–ø–∏—Å–∫—É ‚Äì –æ—Ç—Ä–∏–º–∞–π—Ç–µ –∑–Ω–∏–∂–∫–∏ —Ç–∞ –¥–æ—Å—Ç—É–ø –¥–æ –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω–∏—Ö
              —Ñ—É–Ω–∫—Ü—ñ–π!
            </p>
          </div>

          {!isLoggedIn && (
            <div className={styles.registerCallout}>
              <div
                className={styles.registerBlock}
                onClick={() => setIsRegisterModalOpen(true)}
                style={{ cursor: "pointer" }}
              >
                <p className={styles.registerText}>
                  –ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å, —â–æ–± –ø—Ä–∏–¥–±–∞—Ç–∏
                </p>
              </div>
              <button
                className={styles.registerBtn}
                onClick={() => setIsTrenersModalOpen(true)}
              >
                –°—Ç–∞—Ç–∏ —Ç—Ä–µ–Ω–µ—Ä–æ–º
              </button>
            </div>
          )}

          <div className={styles.actions}>
            <button
              className={`${styles.addToCartButton} ${
                isControlsDisabled ? styles.addToCartButtonDisabled : ""
              }`}
              disabled={isControlsDisabled}
              onClick={handleAddToCart}
            >
              {isInCart ? "–í –∫–æ—à–∏–∫—É" : "–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫"}
            </button>
            <button
              className={`${styles.favoriteButton} ${
                favorite ? styles.favoriteActive : ""
              } ${isControlsDisabled ? styles.favoriteButtonDisabled : ""}`}
              onClick={isControlsDisabled ? undefined : toggleFavorite}
              disabled={isControlsDisabled}
            >
              {favorite ? <Smitnik2Icon /> : <FavoriteHeader />}
            </button>
          </div>
        </div>
      </div>

      {!isLoggedIn && (
        <>
          <TrenersModal
            isOpen={isTrenersModalOpen}
            onClose={() => setIsTrenersModalOpen(false)}
          />
          <RegisterModal
            isOpen={isRegisterModalOpen}
            onClose={() => setIsRegisterModalOpen(false)}
          />
        </>
      )}
    </div>
  );
};

export default CourseSidebar;
