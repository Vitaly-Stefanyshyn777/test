"use client";
import React, { useState, useEffect } from "react";
import Image from "next/image";
import { –°hevronIcon } from "../../Icons/Icons";
import styles from "./FAQSection.module.css";
import { fetchFAQByCategoryWithLogging, FaqItem } from "@/lib/bfbApi";
import { useQuery } from "@tanstack/react-query";

// Fallback data for when API fails
const fallbackFAQData = [
  {
    id: 1,
    question: "–ß–∏ –º–æ–∂—É —è –∫—É–ø–∏—Ç–∏ –±–æ—Ä–¥, —è–∫—â–æ —â–µ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–≤(-–ª–∞) –Ω–∞–≤—á–∞–Ω–Ω—è?",
    answer:
      "–¢–∞–∫, –≤–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–¥–±–∞—Ç–∏ –±–æ—Ä–¥ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –Ω–∞–≤—á–∞–Ω–Ω—è. –û–¥–Ω–∞–∫ –º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–π—Ç–∏ –±–∞–∑–æ–≤–∏–π –∫—É—Ä—Å –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è.",
  },
  {
    id: 2,
    question: "–Ø–∫—ñ —É–º–æ–≤–∏ –¥–æ—Å—Ç–∞–≤–∫–∏?",
    answer:
      "–ú–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—É –¥–æ—Å—Ç–∞–≤–∫—É –ø–æ –£–∫—Ä–∞—ó–Ω—ñ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω—å –≤—ñ–¥ 1500 –≥—Ä–Ω. –î–æ—Å—Ç–∞–≤–∫–∞ –∑–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è –ø—Ä–æ—Ç—è–≥–æ–º 1-3 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤. –î–ª—è –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å —É–º–æ–≤–∏ —É—Ç–æ—á–Ω—é—é—Ç—å—Å—è —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ.",
  },
  {
    id: 3,
    question: "–ß–∏ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –±–æ—Ä–¥ –¥–ª—è –¥–æ–º–∞—à–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è?",
    answer:
      "–ê–±—Å–æ–ª—é—Ç–Ω–æ! BFB –±–æ—Ä–¥–∏ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ —Ä–æ–∑—Ä–æ–±–ª–µ–Ω—ñ –¥–ª—è –¥–æ–º–∞—à–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è. –í–æ–Ω–∏ –∫–æ–º–ø–∞–∫—Ç–Ω—ñ, –±–µ–∑–ø–µ—á–Ω—ñ —Ç–∞ –Ω–µ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è. –í –∫–æ–º–ø–ª–µ–∫—Ç—ñ –π–¥–µ –¥–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –∑ –≤–ø—Ä–∞–≤–∞–º–∏.",
  },
  {
    id: 4,
    question: "–ó —è–∫–æ–≥–æ –≤—ñ–∫—É –º–æ–∂–Ω–∞ –∑–∞–π–º–∞—Ç–∏—Å—è –Ω–∞ –±–æ—Ä–¥—ñ?",
    answer:
      "–ë–æ—Ä–¥–∏ –ø—ñ–¥—Ö–æ–¥—è—Ç—å –¥–ª—è –æ—Å—ñ–± –≤—ñ–¥ 16 —Ä–æ–∫—ñ–≤. –î–ª—è –¥—ñ—Ç–µ–π –º–æ–ª–æ–¥—à–æ–≥–æ –≤—ñ–∫—É —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –∑–∞–Ω—è—Ç—Å—è –ø—ñ–¥ –Ω–∞–≥–ª—è–¥–æ–º –¥–æ—Ä–æ—Å–ª–∏—Ö –∞–±–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ - 120 –∫–≥.",
  },
  {
    id: 5,
    question: "–ß–∏ –≤–∏—Ç—Ä–∏–º—É—î –±–æ—Ä–¥ –≤–µ–ª–∏–∫—É –≤–∞–≥—É?",
    answer:
      "–¢–∞–∫, –Ω–∞—à—ñ –±–æ—Ä–¥–∏ –≤–∏—Ç—Ä–∏–º—É—é—Ç—å –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ 120 –∫–≥. –í–æ–Ω–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω—ñ –∑ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ —Ç–∞ –ø—Ä–æ–π—à–ª–∏ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ç–µ—Å—Ç–∏ –Ω–∞ –º—ñ—Ü–Ω—ñ—Å—Ç—å —Ç–∞ –±–µ–∑–ø–µ–∫—É.",
  },
];

const FAQSection = () => {
  const [expandedItems, setExpandedItems] = useState<number[]>([]);
  const [faqData, setFaqData] = useState<FaqItem[]>([]);
  const [isUsingFallback, setIsUsingFallback] = useState(false);

  const { data, isLoading, isError } = useQuery({
    queryKey: ["faq"],
    queryFn: () => fetchFAQByCategoryWithLogging(),
    staleTime: 5 * 60 * 1000,
    gcTime: 10 * 60 * 1000,
  });

  useEffect(() => {
    if (!data) return;
    if (Array.isArray(data) && data.length > 0) {
      setFaqData(data);
      setIsUsingFallback(false);
    } else {
      setFaqData(
        fallbackFAQData.map((item) => ({
          id: item.id,
          title: { rendered: item.question },
          content: { rendered: item.answer },
        }))
      );
      setIsUsingFallback(true);
    }
  }, [data]);

  const toggleItem = (id: number) => {
    console.log("[FAQSection] üîÑ –ü–µ—Ä–µ–º–∏–∫–∞—é FAQ –µ–ª–µ–º–µ–Ω—Ç:", id);
    setExpandedItems((prev) =>
      prev.includes(id) ? prev.filter((item) => item !== id) : [...prev, id]
    );
  };

  return (
    <section className={styles.faqSection}>
      <div className={styles.container}>
        <div className={styles.contentBlock}>
          <div className={styles.contentTextBlock}>
            <p className={styles.subtitle}>–í—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –õ—ñ–∫–∏</p>
            <h2 className={styles.title}>–ß–∞—Å—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ</h2>
            {isUsingFallback && (
              <div className={styles.fallbackIndicator}>
                <p>üìã –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –±–∞–∑–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è</p>
              </div>
            )}
          </div>

          <div className={styles.content}>
            <div className={styles.leftColumn}>
              <div className={styles.titleContainer}></div>
              <div className={styles.imageContainer}>
                <Image
                  src="/images/Frame 1321318485.png"
                  alt="–î—ñ–≤—á–∏–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–±–æ—Ä–¥—ñ"
                  width={562}
                  height={465}
                  className={styles.heroImage}
                  onLoad={() =>
                    console.log(
                      "[FAQSection] üñºÔ∏è –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
                    )
                  }
                  onError={(e) => {
                    console.error(
                      "[FAQSection] ‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:",
                      e
                    );
                    console.log(
                      "[FAQSection] üîÑ –°–ø—Ä–æ–±—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è"
                    );
                  }}
                  priority={false}
                />
              </div>
            </div>

            <div className={styles.rightColumn}>
              <div className={styles.faqList}>
                {isLoading && (
                  <div className={styles.loading}>
                    <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è FAQ...</p>
                  </div>
                )}

                {isError && (
                  <div className={styles.error}>
                    <p>–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ FAQ</p>
                  </div>
                )}

                {!isLoading && faqData.length === 0 && !isError && (
                  <div className={styles.empty}>
                    <p>FAQ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>
                  </div>
                )}

                {faqData.map((item) => (
                  <div
                    key={item.id}
                    className={`${styles.faqItem} ${
                      expandedItems.includes(item.id) ? styles.expanded : ""
                    }`}
                  >
                    <button
                      className={styles.faqButton}
                      onClick={() => toggleItem(item.id)}
                      aria-expanded={expandedItems.includes(item.id)}
                    >
                      <span className={styles.question}>
                        {item.title?.rendered || "–ü–∏—Ç–∞–Ω–Ω—è"}
                      </span>
                      <span
                        className={`${styles.chevron} ${
                          expandedItems.includes(item.id) ? styles.rotated : ""
                        }`}
                      >
                        <–°hevronIcon />
                      </span>
                    </button>

                    <div
                      className={`${styles.answerContainer} ${
                        expandedItems.includes(item.id) ? styles.open : ""
                      }`}
                    >
                      <div
                        className={styles.answer}
                        dangerouslySetInnerHTML={{
                          __html: item.content?.rendered || "–í—ñ–¥–ø–æ–≤—ñ–¥—å",
                        }}
                      />
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default FAQSection;
