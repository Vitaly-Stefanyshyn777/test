"use client";
import React, { useState, useEffect } from "react";
import styles from "./ProductsGrid.module.css";
import ProductCard from "../ProductCard/ProductCard";
// –í–∏–¥–∞–ª–µ–Ω–æ fetchProductCategoriesFromWp - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤

interface Product {
  id: number;
  name: string;
  price: string;
  regular_price?: string;
  sale_price?: string;
  images: Array<{ src: string; alt: string }>;
  categories: Array<{ id: number; name: string; slug: string }>;
  attributes: Array<{ name: string; options: string[] }>;
  on_sale?: boolean;
  featured?: boolean;
  stock_status?: string;
  date?: string; // –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑ WordPress API
  date_created?: string; // –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑ WooCommerce v3 API
  average_rating?: string;
  review_count?: number;
  is_purchasable?: boolean;
}

interface ProductsGridProps {
  products: Product[];
  isNoCertificationFilter?: boolean; // –ß–∏ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä "–ù–µ–º–∞—î —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó"
  selectedCertificationFilter?: string; // –í–∏–±—Ä–∞–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó (78, 79, –∞–±–æ undefined)
}

export default function ProductsGrid({
  products,
  isNoCertificationFilter = false,
  selectedCertificationFilter,
}: ProductsGridProps) {
  // –í–∏–¥–∞–ª–µ–Ω–æ –Ω–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–Ω—ñ –∑–º—ñ–Ω–Ω—ñ storeProducts
  const [productCategories, setProductCategories] = useState<
    Record<number, Array<{ id: number; name: string; slug: string }>>
  >({});
  const [noCertificationProducts, setNoCertificationProducts] = useState<
    Product[]
  >([]);

  // –°–ø—Ä–æ—â–µ–Ω–∞ –ª–æ–≥—ñ–∫–∞ –±–µ–∑ —Å–∫–ª–∞–¥–Ω–∏—Ö API –∑–∞–ø–∏—Ç—ñ–≤

  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó, —è–∫—ñ –≤–∂–µ —î –≤ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö (—Å–ø—Ä–æ—â–µ–Ω–æ)
  useEffect(() => {
    const categoriesMap = products.reduce((acc, product) => {
      acc[product.id] = product.categories || [];
      return acc;
    }, {} as Record<number, Array<{ id: number; name: string; slug: string }>>);

    setProductCategories(categoriesMap);
  }, [products]);

  // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–≤–∞—Ä–∏ –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é "–ù–µ–º–∞—î —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó" (ID: 78) —á–µ—Ä–µ–∑ WooCommerce v3 API
  // –¢—ñ–ª—å–∫–∏ —è–∫—â–æ –ù–ï –≤–∏–±—Ä–∞–Ω–æ —Ñ—ñ–ª—å—Ç—Ä "–Ñ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç" (79)
  useEffect(() => {
    const fetchNoCertificationProducts = async () => {
      try {
        const response = await fetch(
          "/api/wc/v3/products?category=78&per_page=20"
        );
        if (response.ok) {
          const data = await response.json();
          setNoCertificationProducts(data);
        }
      } catch (error) {
        console.error(
          "[ProductsGrid] –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –±–µ–∑ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:",
          error
        );
      }
    };

    // –ù–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–æ–¥—É–∫—Ç–∏ –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó 78, —è–∫—â–æ –≤–∏–±—Ä–∞–Ω–æ —Ñ—ñ–ª—å—Ç—Ä "–Ñ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç" (79)
    if (selectedCertificationFilter === "79") {
      setNoCertificationProducts([]);
      return;
    }

    // –Ø–∫—â–æ –≤–∏–±—Ä–∞–Ω–æ —Ñ—ñ–ª—å—Ç—Ä "–ù–µ–º–∞—î —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó" (78) –∞–±–æ –Ω–µ –≤–∏–±—Ä–∞–Ω–æ –∂–æ–¥–Ω–æ–≥–æ —Ñ—ñ–ª—å—Ç—Ä–∞, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–æ–¥—É–∫—Ç–∏
    if (selectedCertificationFilter === "78" || !selectedCertificationFilter) {
      fetchNoCertificationProducts();
    }
  }, [selectedCertificationFilter]);

  if (products.length === 0) {
    return (
      <div className={styles.emptyState}>
        <div className={styles.emptyIcon}>üîç</div>
        <h3 className={styles.emptyTitle}>–ü—Ä–æ–¥—É–∫—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
        <p className={styles.emptyDescription}>
          –°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏ –∞–±–æ –ø–æ—à—É–∫–æ–≤—ñ –∫—Ä–∏—Ç–µ—Ä—ñ—ó
        </p>
      </div>
    );
  }

  // –û–±'—î–¥–Ω—É—î–º–æ —Ç–æ–≤–∞—Ä–∏: —Å–ø–æ—á–∞—Ç–∫—É –æ—Å–Ω–æ–≤–Ω—ñ, –ø–æ—Ç—ñ–º —Ç–æ–≤–∞—Ä–∏ –±–µ–∑ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –≤–Ω–∏–∑—É
  // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏ –∑–∞ ID
  const existingIds = new Set(products.map((p) => p.id));
  const uniqueNoCertProducts = noCertificationProducts.filter(
    (p) => !existingIds.has(p.id)
  );

  // –°–æ—Ä—Ç—É—î–º–æ –ø—Ä–æ–¥—É–∫—Ç–∏: —Å–ø–æ—á–∞—Ç–∫—É –∑ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—î—é, –ø–æ—Ç—ñ–º –±–µ–∑ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  const allProducts = [...products, ...uniqueNoCertProducts].sort((a, b) => {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–∞–ª–µ–∂–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó "–ù–µ–º–∞—î —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó" (78)
    const aIsNoCert = a.categories?.some((cat) => cat.id === 78);
    const bIsNoCert = b.categories?.some((cat) => cat.id === 78);

    // –ü—Ä–æ–¥—É–∫—Ç–∏ –±–µ–∑ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –π–¥—É—Ç—å –≤–Ω–∏–∑
    if (aIsNoCert && !bIsNoCert) return 1;
    if (!aIsNoCert && bIsNoCert) return -1;
    return 0;
  });

  // –õ–æ–≥–∏ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏–Ω–æ–∫ –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ñ—ñ–ª—å—Ç—Ä–∞ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  const checkNewProducts = () => {
    const today = new Date();
    allProducts.filter((p) => {
      if (!p.date_created) return false;
      const createdDate = new Date(p.date_created);

      // –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ –¥–∞—Ç–∏ –¥–æ –ø–æ—á–∞—Ç–∫—É –¥–Ω—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó —Ä—ñ–∑–Ω–∏—Ü—ñ
      const createdDateNormalized = new Date(
        createdDate.getFullYear(),
        createdDate.getMonth(),
        createdDate.getDate()
      );
      const todayNormalized = new Date(
        today.getFullYear(),
        today.getMonth(),
        today.getDate()
      );

      const daysDiff = Math.floor(
        (todayNormalized.getTime() - createdDateNormalized.getTime()) /
          (1000 * 60 * 60 * 24)
      );
      return daysDiff <= 14;
    });

    // —Ç–∏—Ö–∏–π —Ä–µ–∂–∏–º ‚Äî –±–µ–∑ –ª–æ–≥—ñ–≤ —Ç–∞ –±–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
  };

  // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–æ–≤–∏–Ω–æ–∫
  checkNewProducts();

  return (
    <div className={styles.productsGrid}>
      {allProducts.map((p, index) => {
        const id = String(p.id);
        const priceNum = Number(p.price) || 0;
        const original = p.regular_price ? Number(p.regular_price) : undefined;
        const image = p.images?.[0]?.src;
        const storeProduct = undefined; // –°–ø—Ä–æ—â–µ–Ω–æ

        // —Ç–∏—Ö–∏–π —Ä–µ–∂–∏–º ‚Äî –±–µ–∑ –ª–æ–≥—ñ–≤

        // –õ–æ–≥ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏–Ω–æ–∫
        if (p.date_created) {
          const createdDate = new Date(p.date_created);
          const today = new Date();
          const daysDiff = Math.floor(
            (today.getTime() - createdDate.getTime()) / (1000 * 60 * 60 * 24)
          );
          // –±–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ª–æ–≥—ñ–≤ —Ç–∞ –±–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è isNew
        }

        return (
          <ProductCard
            key={`${p.id}-${index}`}
            id={id}
            name={p.name}
            price={priceNum}
            originalPrice={original}
            image={image}
            categories={productCategories[p.id] || p.categories}
            dateCreated={p.date_created}
            wcProduct={storeProduct}
            allProducts={products.map(() => ({ total_sales: 0 }))}
            isNoCertificationFilter={isNoCertificationFilter}
          />
        );
      })}
    </div>
  );
}
