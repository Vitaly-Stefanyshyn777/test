import { NextRequest, NextResponse } from "next/server";

const UPSTREAM_BASE =
  process.env.UPSTREAM_BASE || "https://www.api.bfb.projection-learn.website";

export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);

    // –í–∏—Ç—è–≥—É—î–º–æ –º–æ–∂–ª–∏–≤–∏–π Bearer —ñ–∑ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤, –∫—É–∫—ñ –∞–±–æ –∑ env
    const incomingAuthHeader = request.headers.get("authorization") || "";
    const jwtFromHeader = incomingAuthHeader.startsWith("Bearer ")
      ? incomingAuthHeader.substring("Bearer ".length)
      : request.headers.get("x-wp-jwt") || "";
    const jwtFromCookie = request.cookies.get("bfb_user_jwt")?.value || "";
    const adminCookie = request.cookies.get("bfb_admin_jwt")?.value || "";
    const jwtFromEnv = process.env.WP_JWT_TOKEN || "";

    // –û—Ç—Ä–∏–º—É—î–º–æ WordPress –±–∞–∑–æ–≤—ñ –∫—Ä–µ–¥–µ–Ω—à–∞–ª—ñ (fallback)
    const wpUser = process.env.WP_BASIC_USER || process.env.ADMIN_USER;
    const wpPass = process.env.WP_BASIC_PASS || process.env.ADMIN_PASS;

    if (!wpUser || !wpPass) {
      console.error("[Trainers API] ‚ùå WP –∫—Ä–µ–¥–µ–Ω—à–∞–ª—ñ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ");
      return NextResponse.json(
        { error: "WordPress credentials not configured" },
        { status: 500 }
      );
    }

    // –§–æ—Ä–º—É—î–º–æ URL –¥–ª—è WordPress Users API
    const url = new URL(`${UPSTREAM_BASE}/wp-json/wp/v2/users`);

    // –î–æ–¥–∞—î–º–æ –≤—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑ –∑–∞–ø–∏—Ç—É
    searchParams.forEach((value, key) => {
      url.searchParams.append(key, value);
    });

    // –Ø–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å ‚Äî —Å—Ç–∞–≤–∏–º–æ –≤–∏—Å–æ–∫–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ
    if (!url.searchParams.has("per_page")) {
      url.searchParams.set("per_page", "100");
    }
    // –Ø–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–∞ —Ä–æ–ª—å ‚Äî –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –±–µ—Ä–µ–º–æ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤
    if (!url.searchParams.has("roles")) {
      url.searchParams.set("roles", "bfb_coach");
    }

    // –Ø–∫—â–æ —î –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –∞–¥–º—ñ–Ω-–∑–∞–ø–∏—Ç ‚Äî –≤—ñ–¥–¥–∞—î–º–æ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç admin JWT —ñ–∑ –∫—É–∫—ñ
    const wantsAdmin =
      request.headers.get("x-internal-admin") === "1" ||
      request.headers.get("X-Internal-Admin") === "1";

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ä–µ–∂–∏–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó: Bearer (–ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç) –∞–±–æ Basic
    let bearerToken = wantsAdmin
      ? adminCookie || jwtFromHeader || jwtFromCookie || jwtFromEnv
      : jwtFromHeader || jwtFromCookie || jwtFromEnv;

    // –Ø–∫—â–æ —Ü–µ –∞–¥–º—ñ–Ω-–∑–∞–ø–∏—Ç, –∞–ª–µ Bearer –≤—ñ–¥—Å—É—Ç–Ω—ñ–π ‚Äî —Å–ø—Ä–æ–±—É—î–º–æ —Ç–∏—Ö–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–∫–µ–Ω –∑ WP
    // —ñ –ø–æ–∑–Ω–∞—á–∏–º–æ, —â–æ —Ç—Ä–µ–±–∞ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∫—É–∫—ñ
    let shouldSetAdminCookie = false;
    if (wantsAdmin && !bearerToken) {
      const upstreamBase =
        process.env.UPSTREAM_BASE ||
        "https://www.api.bfb.projection-learn.website";
      const username = process.env.ADMIN_USER;
      const password = process.env.ADMIN_PASS;
      if (username && password && upstreamBase) {
        try {
          const wpRes = await fetch(
            `${upstreamBase}/wp-json/jwt-auth/v1/token`,
            {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ username, password }),
              cache: "no-store",
            }
          );
          if (wpRes.ok) {
            const data = await wpRes.json();
            if (data?.token) {
              bearerToken = data.token as string;
              shouldSetAdminCookie = true;
            }
          }
        } catch {}
      }
    }
    const headers: Record<string, string> = {
      "Content-Type": "application/json",
    };
    if (bearerToken) {
      headers.Authorization = `Bearer ${bearerToken}`;
      console.log(
        "[Trainers API] üîê Auth: Bearer JWT",
        wantsAdmin ? "(admin)" : "(user)"
      );
    } else if (wpUser && wpPass) {
      headers.Authorization = `Basic ${Buffer.from(
        `${wpUser}:${wpPass}`
      ).toString("base64")}`;
      console.log("[Trainers API] üîê Auth: Basic");
    }

    console.log("[Trainers API] üöÄ –ó–∞–ø–∏—Ç –¥–æ WordPress:", url.toString());

    // –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –∑ WordPress –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é
    const response = await fetch(url.toString(), {
      method: "GET",
      headers,
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error(
        "[Trainers API] ‚ùå –ü–æ–º–∏–ª–∫–∞ WordPress API:",
        response.status,
        errorText
      );
      return NextResponse.json(
        { error: `WordPress API error: ${response.status}` },
        { status: response.status }
      );
    }

    const data = await response.json();
    console.log("[Trainers API] ‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤:", data.length);

    const res = NextResponse.json(data);
    if (shouldSetAdminCookie && bearerToken) {
      const isProd = process.env.NODE_ENV === "production";
      res.cookies.set("bfb_admin_jwt", bearerToken, {
        httpOnly: true,
        sameSite: "lax",
        secure: isProd,
        path: "/",
        maxAge: 60 * 60 * 12,
      });
    }
    return res;
  } catch (error) {
    console.error("[Trainers API] ‚ùå –ü–æ–º–∏–ª–∫–∞:", error);
    return NextResponse.json(
      { error: "Internal server error" },
      { status: 500 }
    );
  }
}
